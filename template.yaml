AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Dynamo sample
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.7
    Timeout: 60
    Environment:
      Variables:
        USER_TABLE: !Ref UsersDynamoDBName

Parameters:
  UsersDynamoDBName:
    Type: String
    Default: Users
    Description: Name of users table

Resources:
  DynamoSamplePut:
    Type: AWS::Serverless::Function
    Properties:
      Description: 'Put user into dynamoDB'
      CodeUri: dynamo_sample_put/
      Handler: app.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /put
            Method: post
  DynamoSampleGet:
    Type: AWS::Serverless::Function
    Properties:
      Description: 'Get user from dynamoDB'
      CodeUri: dynamo_sample_get/
      Handler: app.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /get
            Method: get
  UserDynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "username"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "username"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: !Ref UsersDynamoDBName
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: UsersStackLambdaRole
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonKinesisFullAccess
